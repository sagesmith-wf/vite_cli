/*
=========================================================
Apply plugins
=========================================================
*/
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

/*
=========================================================
Repo Info
=========================================================
*/
group = 'com.vite'
description = 'Vite command line interface'

/*
=========================================================
  Create self contained jar
=========================================================
*/

def artifactName = 'vite-cli'

task generatePom << {
    pom {
        project {
            artifactId = artifactName
            name = artifactName
        }
    }.writeTo("$buildDir/tmp/maven/pom.xml")
}

jar {
    baseName = artifactName
    manifest {
        attributes(
                "Implementation-Title": baseName,
                "Implementation-Version": version,
        )
    }
    into("META-INF/maven/$project.group/$baseName") {
        from "$buildDir/tmp/maven/"
    }
}
jar.dependsOn generatePom

/*
=========================================================
    Javadocs Generation
=========================================================
*/
task docs(type: Javadoc) {
    source = sourceSets.main.java
    destinationDir = file("$project.buildDir/javadocs")
    failOnError = false
}

task makeJavadoc(type: Jar) {
    baseName = artifactName
    version = project.version
    extension = "jar"
    classifier = "javadoc"
    destinationDir = file("$buildDir/libs/")
    from(files(project.files("$buildDir/javadocs"), file("$buildDir/tmp/maven/")))
}
makeJavadoc.dependsOn generatePom
makeJavadoc.dependsOn docs

task makeDocumentation(type: Tar) {
    baseName = artifactName
    version = project.version
    extension = "tar.gz"
    compression = Compression.GZIP
    classifier = "javadoc"
    destinationDir = file("$buildDir/")
    from(project.files("$buildDir/javadocs"))
}
makeDocumentation.dependsOn docs

/*
=========================================================
    Source code tar Generation
=========================================================
*/
task makeSource(type: Jar) {
    baseName = artifactName
    version = project.version
    extension = "jar"
    classifier = "src"
    destinationDir = file("$buildDir/libs/")
    from(project.files("src"), project.file("README*"), project.file("$buildDir/tmp/maven/pom.xml"))
}
makeSource.dependsOn generatePom
compileJava.dependsOn makeSource
compileJava.dependsOn docs

/*
=========================================================
  Publishing
=========================================================
*/
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = group
            artifactId = artifactName
            version = project.version

            from components.java
        }
    }
}

/*
=========================================================
   Load Dependencies
=========================================================
*/
repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile(group: 'com.vite', name: 'vite-server-api', version: '0.0.0-SNAPSHOT')
    compile(group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7')
    compile(group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7')

    testCompile(group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3')
    testCompile(group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3')
    testCompile(group: 'junit', name: 'junit', version: '4.12')
    testCompile(group: 'org.mockito', name: 'mockito-core', version: '1.8.5')
}
